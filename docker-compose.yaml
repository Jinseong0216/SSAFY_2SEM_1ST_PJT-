version: "3.8"
services:
  web:
    build:
      context: ./frontend  # Vue 애플리케이션 디렉토리
      dockerfile: Dockerfile  # 위에서 작성한 Dockerfile
    container_name: nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./work_dir/conf.d:/etc/nginx/conf.d
      - ./work_dir/certbot/conf:/etc/nginx/ssl
      - ./work_dir/certbot/data:/var/www/certbot
    networks:
      - my-sql-network

  certbot:
    image: certbot/certbot:latest
    command: certonly --webroot --webroot-path=/var/www/certbot --email hjcho9510@google.com --agree-tos --no-eff-email -d i12e103.p.ssafy.io
    volumes:
      - ./work_dir/certbot/conf:/etc/letsencrypt
      - ./work_dir/certbot/logs:/var/log/letsencrypt
      - ./work_dir/certbot/data:/var/www/certbot
  spring-boot:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: spring-boot
    restart: unless-stopped
    ports:
      - 8076:8076
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xms512m -Xmx1024m
    networks:
      - redis-network
      - my-sql-network
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: "E103_DB"
    ports:
      - 3307:3306
    volumes:
      - my-sql-volume:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - my-sql-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 10s

volumes:
  my-sql-volume:

networks:
  redis-network:
    driver: bridge
    external: true
  my-sql-network:
    driver: bridge
    external: true
