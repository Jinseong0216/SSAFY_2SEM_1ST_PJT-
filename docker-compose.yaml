services:
<<<<<<< Updated upstream
=======
  jenkins:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: jenkins-main
    user: root
    ports:
      - "9060:8080"
      - "50000:50000"
    environment:
      - JAVA_OPS=-Xmx1g
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/ubuntu/jenkins-data:/var/jenkins_home
    restart: always

>>>>>>> Stashed changes
  spring-boot:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: spring-boot
    restart: unless-stopped
    ports:
      - 8076:8076
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xms512m -Xmx1024m
    networks:
      - redis-network
      - my-sql-network
    depends_on:
      mysql:
        condition: service_healthy
      # - web-redis

  vue-app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vue-app
    restart: unless-stopped
    ports:
      - 8077:80

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: "E103_DB"
    ports:
      - 3307:3306
    volumes:
      - my-sql-volume:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - my-sql-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 10s

  # web-redis:
  #   image: docker.io/redis:7.4.1-alpine
  #   platform: linux/amd64
  #   container_name: web-redis
  #   restart: unless-stopped
  #   ports:
  #     - 6380:6379
  #   volumes:
  #     - web-redis:/data

volumes:
  my-sql-volume:
  # web-redis:

networks:
  redis-network:
    driver: bridge
    external: true
  my-sql-network:
    driver: bridge
    external: true
