version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - frontend_dist:/app/dist
    container_name: frontend_build

  web:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - 8081:80
      - 443:443
    volumes:
      - ./work_dir/conf.d:/etc/nginx/conf.d
      - ./work_dir/certbot/conf:/etc/letsencrypt
      - ./work_dir/certbot/data:/var/www/certbot
      - ./work_dir/certbot/conf/live/i12e103.p.ssafy.io:/etc/nginx/ssl
      - frontend_dist:/usr/share/nginx/html:ro
    networks:
      - my-sql-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 10s
      timeout: 10s
      retries: 3
    depends_on:
      - frontend

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    depends_on:
      web:
        condition: service_healthy
    entrypoint: "/bin/sh -c 'certbot certonly --webroot --webroot-path=/var/www/certbot --email hjcho9510@google.com --agree-tos --no-eff-email -d i12e103.p.ssafy.io && certbot renew --dry-run'"
    volumes:
      - ./work_dir/certbot/conf:/etc/letsencrypt
      - ./work_dir/certbot/logs:/var/log/letsencrypt
      - ./work_dir/certbot/data:/var/www/certbot

  spring-boot:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: spring-boot
    restart: unless-stopped
    ports:
      - 8076:8076
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xms512m -Xmx1024m
    networks:
      - redis-network
      - my-sql-network
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: "E103_DB"
    ports:
      - 3307:3306
    volumes:
      - my-sql-volume:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - my-sql-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 10s

volumes:
  frontend_dist:
  my-sql-volume:

networks:
  redis-network:
    driver: bridge
    external: true
  my-sql-network:
    driver: bridge
    external: true